//
// MenuOutputDetailMedia.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

public struct MenuOutputDetailMedia: Codable, JSONEncodable, Hashable {

    public static let greetingRule = StringRule(minLength: 3, maxLength: 2048, pattern: nil)
    /** The ID of a media object that should be used as the menu greeting */
    public var greeting: String?
    /** When the collected digits don't result in a match or hunt this media can be played */
    public var invalidMedia: AnyCodable?
    /** When a call is transferred from the menu, either after all retries exhausted or a successful hunt, this media can be played */
    public var transferMedia: AnyCodable?

    public init(greeting: String? = nil, invalidMedia: AnyCodable? = nil, transferMedia: AnyCodable? = nil) {
        self.greeting = greeting
        self.invalidMedia = invalidMedia
        self.transferMedia = transferMedia
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case greeting
        case invalidMedia = "invalid_media"
        case transferMedia = "transfer_media"
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encodeIfPresent(greeting, forKey: .greeting)
        try container.encodeIfPresent(invalidMedia, forKey: .invalidMedia)
        try container.encodeIfPresent(transferMedia, forKey: .transferMedia)
    }
}


//
// ServiceVOIPAccountLimit2.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

public struct ServiceVOIPAccountLimit2: Codable, JSONEncodable, Hashable {

    public static let inboundTrunksRule = NumericRule<Int>(minimum: 0, exclusiveMinimum: false, maximum: 1000, exclusiveMaximum: false, multipleOf: nil)
    public static let outboundTrunksRule = NumericRule<Int>(minimum: 0, exclusiveMinimum: false, maximum: 1000, exclusiveMaximum: false, multipleOf: nil)
    public static let twowayTrunksRule = NumericRule<Int>(minimum: 0, exclusiveMinimum: false, maximum: 1000, exclusiveMaximum: false, multipleOf: nil)
    public var inboundTrunks: Int
    public var outboundTrunks: Int
    public var twowayTrunks: Int

    public init(inboundTrunks: Int, outboundTrunks: Int, twowayTrunks: Int) {
        self.inboundTrunks = inboundTrunks
        self.outboundTrunks = outboundTrunks
        self.twowayTrunks = twowayTrunks
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case inboundTrunks = "inbound_trunks"
        case outboundTrunks = "outbound_trunks"
        case twowayTrunks = "twoway_trunks"
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encode(inboundTrunks, forKey: .inboundTrunks)
        try container.encode(outboundTrunks, forKey: .outboundTrunks)
        try container.encode(twowayTrunks, forKey: .twowayTrunks)
    }
}


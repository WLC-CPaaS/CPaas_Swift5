//
// ServiceVOIPAccountEditData.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

public struct ServiceVOIPAccountEditData: Codable, JSONEncodable, Hashable {

    public static let nameRule = StringRule(minLength: nil, maxLength: 128, pattern: nil)
    public static let timezoneRule = StringRule(minLength: 5, maxLength: 32, pattern: nil)
    public var callerId: ModelsVOIPAccountOutputFullCallerid?
    public var doNotDisturb: ModelsVOIPSharedDoNotDisturb?
    public var enabled: Bool?
    public var musicOnHold: ModelsVOIPAccountMusicOnHold?
    public var name: String
    public var timezone: String

    public init(callerId: ModelsVOIPAccountOutputFullCallerid? = nil, doNotDisturb: ModelsVOIPSharedDoNotDisturb? = nil, enabled: Bool? = nil, musicOnHold: ModelsVOIPAccountMusicOnHold? = nil, name: String, timezone: String) {
        self.callerId = callerId
        self.doNotDisturb = doNotDisturb
        self.enabled = enabled
        self.musicOnHold = musicOnHold
        self.name = name
        self.timezone = timezone
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case callerId = "caller_id"
        case doNotDisturb = "do_not_disturb"
        case enabled
        case musicOnHold = "music_on_hold"
        case name
        case timezone
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encodeIfPresent(callerId, forKey: .callerId)
        try container.encodeIfPresent(doNotDisturb, forKey: .doNotDisturb)
        try container.encodeIfPresent(enabled, forKey: .enabled)
        try container.encodeIfPresent(musicOnHold, forKey: .musicOnHold)
        try container.encode(name, forKey: .name)
        try container.encode(timezone, forKey: .timezone)
    }
}


//
// ServiceVoicemailOutputFull.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

public struct ServiceVoicemailOutputFull: Codable, JSONEncodable, Hashable {

    public var id: String?
    public var mailbox: String?
    public var media: ServiceVoicemailMedia?
    public var mediaExtension: String?
    public var messages: Int?
    public var name: String?
    public var ownerId: String?
    public var pin: String?
    public var requirePin: Bool?
    public var timezone: String?

    public init(id: String? = nil, mailbox: String? = nil, media: ServiceVoicemailMedia? = nil, mediaExtension: String? = nil, messages: Int? = nil, name: String? = nil, ownerId: String? = nil, pin: String? = nil, requirePin: Bool? = nil, timezone: String? = nil) {
        self.id = id
        self.mailbox = mailbox
        self.media = media
        self.mediaExtension = mediaExtension
        self.messages = messages
        self.name = name
        self.ownerId = ownerId
        self.pin = pin
        self.requirePin = requirePin
        self.timezone = timezone
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case id
        case mailbox
        case media
        case mediaExtension = "media_extension"
        case messages
        case name
        case ownerId = "owner_id"
        case pin
        case requirePin = "require_pin"
        case timezone
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encodeIfPresent(id, forKey: .id)
        try container.encodeIfPresent(mailbox, forKey: .mailbox)
        try container.encodeIfPresent(media, forKey: .media)
        try container.encodeIfPresent(mediaExtension, forKey: .mediaExtension)
        try container.encodeIfPresent(messages, forKey: .messages)
        try container.encodeIfPresent(name, forKey: .name)
        try container.encodeIfPresent(ownerId, forKey: .ownerId)
        try container.encodeIfPresent(pin, forKey: .pin)
        try container.encodeIfPresent(requirePin, forKey: .requirePin)
        try container.encodeIfPresent(timezone, forKey: .timezone)
    }
}


@available(iOS 13, tvOS 13, watchOS 6, macOS 10.15, *)
extension ServiceVoicemailOutputFull: Identifiable {}

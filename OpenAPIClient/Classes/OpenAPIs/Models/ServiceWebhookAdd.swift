//
// ServiceWebhookAdd.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

public struct ServiceWebhookAdd: Codable, JSONEncodable, Hashable {

    public enum CallbackMethod: String, Codable, CaseIterable {
        case post = "POST"
        case put = "PUT"
    }
    public static let titleRule = StringRule(minLength: 3, maxLength: nil, pattern: nil)
    public var callbackMethod: CallbackMethod
    public var callbackUrl: String
    public var data: [String: AnyCodable]?
    public var title: String
    public var webhookType: String

    public init(callbackMethod: CallbackMethod, callbackUrl: String, data: [String: AnyCodable]? = nil, title: String, webhookType: String) {
        self.callbackMethod = callbackMethod
        self.callbackUrl = callbackUrl
        self.data = data
        self.title = title
        self.webhookType = webhookType
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case callbackMethod = "callback_method"
        case callbackUrl = "callback_url"
        case data
        case title
        case webhookType = "webhook_type"
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encode(callbackMethod, forKey: .callbackMethod)
        try container.encode(callbackUrl, forKey: .callbackUrl)
        try container.encodeIfPresent(data, forKey: .data)
        try container.encode(title, forKey: .title)
        try container.encode(webhookType, forKey: .webhookType)
    }
}


//
// CallQueueRecipientAPI.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

open class CallQueueRecipientAPI {

    /**
     Login as Recipient
     
     - parameter accountID: (path) Account ID, 32 alpha numeric 
     - parameter recipientID: (path) Recipient ID, 32 alpha numeric 
     - parameter reqBody: (body) payload fields 
     - parameter apiResponseQueue: The queue on which api response is dispatched.
     - parameter completion: completion handler to receive the data and the error objects
     */
    @discardableResult
    open class func v1AccountAccountIDLoginrecipientRecipientIDPost(accountID: String, recipientID: String, reqBody: ServiceVOIPCallQueueRecipientLoginLogoutData, apiResponseQueue: DispatchQueue = OpenAPIClientAPI.apiResponseQueue, completion: @escaping ((_ data: ServiceDocsCallQueueRecipientLoginLogoutOutput?, _ error: Error?) -> Void)) -> RequestTask {
        return v1AccountAccountIDLoginrecipientRecipientIDPostWithRequestBuilder(accountID: accountID, recipientID: recipientID, reqBody: reqBody).execute(apiResponseQueue) { result in
            switch result {
            case let .success(response):
                completion(response.body, nil)
            case let .failure(error):
                completion(nil, error)
            }
        }
    }

    /**
     Login as Recipient
     - POST /v1/account/{accountID}/loginrecipient/{recipientID}
     - Agents must log in to receive calls. Depending on their membership, they can log in to one or more queues. (If an agent is a member of more than one queue, they will receive calls from all the queues they are a part of.)
     - API Key:
       - type: apiKey Authorization (HEADER)
       - name: BearerAuth
     - parameter accountID: (path) Account ID, 32 alpha numeric 
     - parameter recipientID: (path) Recipient ID, 32 alpha numeric 
     - parameter reqBody: (body) payload fields 
     - returns: RequestBuilder<ServiceDocsCallQueueRecipientLoginLogoutOutput> 
     */
    open class func v1AccountAccountIDLoginrecipientRecipientIDPostWithRequestBuilder(accountID: String, recipientID: String, reqBody: ServiceVOIPCallQueueRecipientLoginLogoutData) -> RequestBuilder<ServiceDocsCallQueueRecipientLoginLogoutOutput> {
        var localVariablePath = "/v1/account/{accountID}/loginrecipient/{recipientID}"
        let accountIDPreEscape = "\(APIHelper.mapValueToPathItem(accountID))"
        let accountIDPostEscape = accountIDPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        localVariablePath = localVariablePath.replacingOccurrences(of: "{accountID}", with: accountIDPostEscape, options: .literal, range: nil)
        let recipientIDPreEscape = "\(APIHelper.mapValueToPathItem(recipientID))"
        let recipientIDPostEscape = recipientIDPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        localVariablePath = localVariablePath.replacingOccurrences(of: "{recipientID}", with: recipientIDPostEscape, options: .literal, range: nil)
        let localVariableURLString = OpenAPIClientAPI.basePath + localVariablePath
        let localVariableParameters = JSONEncodingHelper.encodingParameters(forEncodableObject: reqBody)

        let localVariableUrlComponents = URLComponents(string: localVariableURLString)

        let localVariableNillableHeaders: [String: Any?] = [
            "Content-Type": "application/json",
        ]

        let localVariableHeaderParameters = APIHelper.rejectNilHeaders(localVariableNillableHeaders)

        let localVariableRequestBuilder: RequestBuilder<ServiceDocsCallQueueRecipientLoginLogoutOutput>.Type = OpenAPIClientAPI.requestBuilderFactory.getBuilder()

        return localVariableRequestBuilder.init(method: "POST", URLString: (localVariableUrlComponents?.string ?? localVariableURLString), parameters: localVariableParameters, headers: localVariableHeaderParameters, requiresAuthentication: true)
    }

    /**
     Change Recipient Status
     
     - parameter accountID: (path) Account ID, 32 alpha numeric 
     - parameter apiResponseQueue: The queue on which api response is dispatched.
     - parameter completion: completion handler to receive the data and the error objects
     */
    @discardableResult
    open class func v1AccountAccountIDQueuerecipientGet(accountID: String, apiResponseQueue: DispatchQueue = OpenAPIClientAPI.apiResponseQueue, completion: @escaping ((_ data: ServiceDocsGetQueueRecipients?, _ error: Error?) -> Void)) -> RequestTask {
        return v1AccountAccountIDQueuerecipientGetWithRequestBuilder(accountID: accountID).execute(apiResponseQueue) { result in
            switch result {
            case let .success(response):
                completion(response.body, nil)
            case let .failure(error):
                completion(nil, error)
            }
        }
    }

    /**
     Change Recipient Status
     - GET /v1/account/{accountID}/queuerecipient
     - Get a list of all recipients in an account.
     - API Key:
       - type: apiKey Authorization (HEADER)
       - name: BearerAuth
     - parameter accountID: (path) Account ID, 32 alpha numeric 
     - returns: RequestBuilder<ServiceDocsGetQueueRecipients> 
     */
    open class func v1AccountAccountIDQueuerecipientGetWithRequestBuilder(accountID: String) -> RequestBuilder<ServiceDocsGetQueueRecipients> {
        var localVariablePath = "/v1/account/{accountID}/queuerecipient"
        let accountIDPreEscape = "\(APIHelper.mapValueToPathItem(accountID))"
        let accountIDPostEscape = accountIDPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        localVariablePath = localVariablePath.replacingOccurrences(of: "{accountID}", with: accountIDPostEscape, options: .literal, range: nil)
        let localVariableURLString = OpenAPIClientAPI.basePath + localVariablePath
        let localVariableParameters: [String: Any]? = nil

        let localVariableUrlComponents = URLComponents(string: localVariableURLString)

        let localVariableNillableHeaders: [String: Any?] = [
            :
        ]

        let localVariableHeaderParameters = APIHelper.rejectNilHeaders(localVariableNillableHeaders)

        let localVariableRequestBuilder: RequestBuilder<ServiceDocsGetQueueRecipients>.Type = OpenAPIClientAPI.requestBuilderFactory.getBuilder()

        return localVariableRequestBuilder.init(method: "GET", URLString: (localVariableUrlComponents?.string ?? localVariableURLString), parameters: localVariableParameters, headers: localVariableHeaderParameters, requiresAuthentication: true)
    }

    /**
     Get Recipient List
     
     - parameter accountID: (path) Account ID, 32 alpha numeric 
     - parameter recipientID: (path) Recipient ID, 32 alpha numeric 
     - parameter reqBody: (body) payload fields 
     - parameter apiResponseQueue: The queue on which api response is dispatched.
     - parameter completion: completion handler to receive the data and the error objects
     */
    @discardableResult
    open class func v1AccountAccountIDRecipientRecipientIDStatusPost(accountID: String, recipientID: String, reqBody: ServiceVOIPCallQueueRecipientStatusData, apiResponseQueue: DispatchQueue = OpenAPIClientAPI.apiResponseQueue, completion: @escaping ((_ data: ServiceAPIResponse?, _ error: Error?) -> Void)) -> RequestTask {
        return v1AccountAccountIDRecipientRecipientIDStatusPostWithRequestBuilder(accountID: accountID, recipientID: recipientID, reqBody: reqBody).execute(apiResponseQueue) { result in
            switch result {
            case let .success(response):
                completion(response.body, nil)
            case let .failure(error):
                completion(nil, error)
            }
        }
    }

    /**
     Get Recipient List
     - POST /v1/account/{accountID}/recipient/{recipientID}/status
     - Change the status of a recipient to ready, away, etc.
     - API Key:
       - type: apiKey Authorization (HEADER)
       - name: BearerAuth
     - parameter accountID: (path) Account ID, 32 alpha numeric 
     - parameter recipientID: (path) Recipient ID, 32 alpha numeric 
     - parameter reqBody: (body) payload fields 
     - returns: RequestBuilder<ServiceAPIResponse> 
     */
    open class func v1AccountAccountIDRecipientRecipientIDStatusPostWithRequestBuilder(accountID: String, recipientID: String, reqBody: ServiceVOIPCallQueueRecipientStatusData) -> RequestBuilder<ServiceAPIResponse> {
        var localVariablePath = "/v1/account/{accountID}/recipient/{recipientID}/status"
        let accountIDPreEscape = "\(APIHelper.mapValueToPathItem(accountID))"
        let accountIDPostEscape = accountIDPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        localVariablePath = localVariablePath.replacingOccurrences(of: "{accountID}", with: accountIDPostEscape, options: .literal, range: nil)
        let recipientIDPreEscape = "\(APIHelper.mapValueToPathItem(recipientID))"
        let recipientIDPostEscape = recipientIDPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        localVariablePath = localVariablePath.replacingOccurrences(of: "{recipientID}", with: recipientIDPostEscape, options: .literal, range: nil)
        let localVariableURLString = OpenAPIClientAPI.basePath + localVariablePath
        let localVariableParameters = JSONEncodingHelper.encodingParameters(forEncodableObject: reqBody)

        let localVariableUrlComponents = URLComponents(string: localVariableURLString)

        let localVariableNillableHeaders: [String: Any?] = [
            "Content-Type": "application/json",
        ]

        let localVariableHeaderParameters = APIHelper.rejectNilHeaders(localVariableNillableHeaders)

        let localVariableRequestBuilder: RequestBuilder<ServiceAPIResponse>.Type = OpenAPIClientAPI.requestBuilderFactory.getBuilder()

        return localVariableRequestBuilder.init(method: "POST", URLString: (localVariableUrlComponents?.string ?? localVariableURLString), parameters: localVariableParameters, headers: localVariableHeaderParameters, requiresAuthentication: true)
    }
}

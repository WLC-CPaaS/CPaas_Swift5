//
// E911API.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

open class E911API {

    /**
     Get E911 List
     
     - parameter apiResponseQueue: The queue on which api response is dispatched.
     - parameter completion: completion handler to receive the data and the error objects
     */
    @discardableResult
    open class func v1E911Get(apiResponseQueue: DispatchQueue = OpenAPIClientAPI.apiResponseQueue, completion: @escaping ((_ data: ServiceDocsE911URIsApiOutput?, _ error: Error?) -> Void)) -> RequestTask {
        return v1E911GetWithRequestBuilder().execute(apiResponseQueue) { result in
            switch result {
            case let .success(response):
                completion(response.body, nil)
            case let .failure(error):
                completion(nil, error)
            }
        }
    }

    /**
     Get E911 List
     - GET /v1/e911
     - Obtain e911 URIs associated with the provided account ID.
     - returns: RequestBuilder<ServiceDocsE911URIsApiOutput> 
     */
    open class func v1E911GetWithRequestBuilder() -> RequestBuilder<ServiceDocsE911URIsApiOutput> {
        let localVariablePath = "/v1/e911"
        let localVariableURLString = OpenAPIClientAPI.basePath + localVariablePath
        let localVariableParameters: [String: Any]? = nil

        let localVariableUrlComponents = URLComponents(string: localVariableURLString)

        let localVariableNillableHeaders: [String: Any?] = [
            :
        ]

        let localVariableHeaderParameters = APIHelper.rejectNilHeaders(localVariableNillableHeaders)

        let localVariableRequestBuilder: RequestBuilder<ServiceDocsE911URIsApiOutput>.Type = OpenAPIClientAPI.requestBuilderFactory.getBuilder()

        return localVariableRequestBuilder.init(method: "GET", URLString: (localVariableUrlComponents?.string ?? localVariableURLString), parameters: localVariableParameters, headers: localVariableHeaderParameters, requiresAuthentication: false)
    }

    /**
     Activate E911 Location
     
     - parameter locationID: (path) Location ID 
     - parameter apiResponseQueue: The queue on which api response is dispatched.
     - parameter completion: completion handler to receive the data and the error objects
     */
    @discardableResult
    open class func v1E911LocationLocationIDActivatePut(locationID: String, apiResponseQueue: DispatchQueue = OpenAPIClientAPI.apiResponseQueue, completion: @escaping ((_ data: ServiceDocsE911ActiveLocationOutput?, _ error: Error?) -> Void)) -> RequestTask {
        return v1E911LocationLocationIDActivatePutWithRequestBuilder(locationID: locationID).execute(apiResponseQueue) { result in
            switch result {
            case let .success(response):
                completion(response.body, nil)
            case let .failure(error):
                completion(nil, error)
            }
        }
    }

    /**
     Activate E911 Location
     - PUT /v1/e911/location/{locationID}/activate
     - Edit the provision location.
     - parameter locationID: (path) Location ID 
     - returns: RequestBuilder<ServiceDocsE911ActiveLocationOutput> 
     */
    open class func v1E911LocationLocationIDActivatePutWithRequestBuilder(locationID: String) -> RequestBuilder<ServiceDocsE911ActiveLocationOutput> {
        var localVariablePath = "/v1/e911/location/{locationID}/activate"
        let locationIDPreEscape = "\(APIHelper.mapValueToPathItem(locationID))"
        let locationIDPostEscape = locationIDPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        localVariablePath = localVariablePath.replacingOccurrences(of: "{locationID}", with: locationIDPostEscape, options: .literal, range: nil)
        let localVariableURLString = OpenAPIClientAPI.basePath + localVariablePath
        let localVariableParameters: [String: Any]? = nil

        let localVariableUrlComponents = URLComponents(string: localVariableURLString)

        let localVariableNillableHeaders: [String: Any?] = [
            :
        ]

        let localVariableHeaderParameters = APIHelper.rejectNilHeaders(localVariableNillableHeaders)

        let localVariableRequestBuilder: RequestBuilder<ServiceDocsE911ActiveLocationOutput>.Type = OpenAPIClientAPI.requestBuilderFactory.getBuilder()

        return localVariableRequestBuilder.init(method: "PUT", URLString: (localVariableUrlComponents?.string ?? localVariableURLString), parameters: localVariableParameters, headers: localVariableHeaderParameters, requiresAuthentication: false)
    }

    /**
     Delete E911 Location
     
     - parameter locationID: (path) Location ID 
     - parameter apiResponseQueue: The queue on which api response is dispatched.
     - parameter completion: completion handler to receive the data and the error objects
     */
    @discardableResult
    open class func v1E911LocationLocationIDDelete(locationID: String, apiResponseQueue: DispatchQueue = OpenAPIClientAPI.apiResponseQueue, completion: @escaping ((_ data: ServiceDocsE911RemoveLocationOutput?, _ error: Error?) -> Void)) -> RequestTask {
        return v1E911LocationLocationIDDeleteWithRequestBuilder(locationID: locationID).execute(apiResponseQueue) { result in
            switch result {
            case let .success(response):
                completion(response.body, nil)
            case let .failure(error):
                completion(nil, error)
            }
        }
    }

    /**
     Delete E911 Location
     - DELETE /v1/e911/location/{locationID}
     - Remove the location.
     - parameter locationID: (path) Location ID 
     - returns: RequestBuilder<ServiceDocsE911RemoveLocationOutput> 
     */
    open class func v1E911LocationLocationIDDeleteWithRequestBuilder(locationID: String) -> RequestBuilder<ServiceDocsE911RemoveLocationOutput> {
        var localVariablePath = "/v1/e911/location/{locationID}"
        let locationIDPreEscape = "\(APIHelper.mapValueToPathItem(locationID))"
        let locationIDPostEscape = locationIDPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        localVariablePath = localVariablePath.replacingOccurrences(of: "{locationID}", with: locationIDPostEscape, options: .literal, range: nil)
        let localVariableURLString = OpenAPIClientAPI.basePath + localVariablePath
        let localVariableParameters: [String: Any]? = nil

        let localVariableUrlComponents = URLComponents(string: localVariableURLString)

        let localVariableNillableHeaders: [String: Any?] = [
            :
        ]

        let localVariableHeaderParameters = APIHelper.rejectNilHeaders(localVariableNillableHeaders)

        let localVariableRequestBuilder: RequestBuilder<ServiceDocsE911RemoveLocationOutput>.Type = OpenAPIClientAPI.requestBuilderFactory.getBuilder()

        return localVariableRequestBuilder.init(method: "DELETE", URLString: (localVariableUrlComponents?.string ?? localVariableURLString), parameters: localVariableParameters, headers: localVariableHeaderParameters, requiresAuthentication: false)
    }

    /**
     Validate a Location
     
     - parameter reqBody: (body) location details 
     - parameter apiResponseQueue: The queue on which api response is dispatched.
     - parameter completion: completion handler to receive the data and the error objects
     */
    @discardableResult
    open class func v1E911LocationValidatePut(reqBody: ServiceE911ValidateLocationInput, apiResponseQueue: DispatchQueue = OpenAPIClientAPI.apiResponseQueue, completion: @escaping ((_ data: ServiceDocsE911ValidateLocationOutput?, _ error: Error?) -> Void)) -> RequestTask {
        return v1E911LocationValidatePutWithRequestBuilder(reqBody: reqBody).execute(apiResponseQueue) { result in
            switch result {
            case let .success(response):
                completion(response.body, nil)
            case let .failure(error):
                completion(nil, error)
            }
        }
    }

    /**
     Validate a Location
     - PUT /v1/e911/location/validate
     - Validate the location details.
     - parameter reqBody: (body) location details 
     - returns: RequestBuilder<ServiceDocsE911ValidateLocationOutput> 
     */
    open class func v1E911LocationValidatePutWithRequestBuilder(reqBody: ServiceE911ValidateLocationInput) -> RequestBuilder<ServiceDocsE911ValidateLocationOutput> {
        let localVariablePath = "/v1/e911/location/validate"
        let localVariableURLString = OpenAPIClientAPI.basePath + localVariablePath
        let localVariableParameters = JSONEncodingHelper.encodingParameters(forEncodableObject: reqBody)

        let localVariableUrlComponents = URLComponents(string: localVariableURLString)

        let localVariableNillableHeaders: [String: Any?] = [
            "Content-Type": "application/json",
        ]

        let localVariableHeaderParameters = APIHelper.rejectNilHeaders(localVariableNillableHeaders)

        let localVariableRequestBuilder: RequestBuilder<ServiceDocsE911ValidateLocationOutput>.Type = OpenAPIClientAPI.requestBuilderFactory.getBuilder()

        return localVariableRequestBuilder.init(method: "PUT", URLString: (localVariableUrlComponents?.string ?? localVariableURLString), parameters: localVariableParameters, headers: localVariableHeaderParameters, requiresAuthentication: false)
    }

    /**
     Delete E911 Phone Number
     
     - parameter phoneNumber: (path) Phone Number 
     - parameter apiResponseQueue: The queue on which api response is dispatched.
     - parameter completion: completion handler to receive the data and the error objects
     */
    @discardableResult
    open class func v1E911PhoneNumberDelete(phoneNumber: String, apiResponseQueue: DispatchQueue = OpenAPIClientAPI.apiResponseQueue, completion: @escaping ((_ data: ServiceDocsE911RemoveURIApiOutput?, _ error: Error?) -> Void)) -> RequestTask {
        return v1E911PhoneNumberDeleteWithRequestBuilder(phoneNumber: phoneNumber).execute(apiResponseQueue) { result in
            switch result {
            case let .success(response):
                completion(response.body, nil)
            case let .failure(error):
                completion(nil, error)
            }
        }
    }

    /**
     Delete E911 Phone Number
     - DELETE /v1/e911/{phoneNumber}
     - Delete the e911 URI connected with the account URI.
     - parameter phoneNumber: (path) Phone Number 
     - returns: RequestBuilder<ServiceDocsE911RemoveURIApiOutput> 
     */
    open class func v1E911PhoneNumberDeleteWithRequestBuilder(phoneNumber: String) -> RequestBuilder<ServiceDocsE911RemoveURIApiOutput> {
        var localVariablePath = "/v1/e911/{phoneNumber}"
        let phoneNumberPreEscape = "\(APIHelper.mapValueToPathItem(phoneNumber))"
        let phoneNumberPostEscape = phoneNumberPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        localVariablePath = localVariablePath.replacingOccurrences(of: "{phoneNumber}", with: phoneNumberPostEscape, options: .literal, range: nil)
        let localVariableURLString = OpenAPIClientAPI.basePath + localVariablePath
        let localVariableParameters: [String: Any]? = nil

        let localVariableUrlComponents = URLComponents(string: localVariableURLString)

        let localVariableNillableHeaders: [String: Any?] = [
            :
        ]

        let localVariableHeaderParameters = APIHelper.rejectNilHeaders(localVariableNillableHeaders)

        let localVariableRequestBuilder: RequestBuilder<ServiceDocsE911RemoveURIApiOutput>.Type = OpenAPIClientAPI.requestBuilderFactory.getBuilder()

        return localVariableRequestBuilder.init(method: "DELETE", URLString: (localVariableUrlComponents?.string ?? localVariableURLString), parameters: localVariableParameters, headers: localVariableHeaderParameters, requiresAuthentication: false)
    }

    /**
     Get Actvie Location for a Phone Number
     
     - parameter phoneNumber: (path) Phone Number 
     - parameter apiResponseQueue: The queue on which api response is dispatched.
     - parameter completion: completion handler to receive the data and the error objects
     */
    @discardableResult
    open class func v1E911PhoneNumberLocationActiveGet(phoneNumber: String, apiResponseQueue: DispatchQueue = OpenAPIClientAPI.apiResponseQueue, completion: @escaping ((_ data: ServiceDocsE911ActiveLocationURIApiOutput?, _ error: Error?) -> Void)) -> RequestTask {
        return v1E911PhoneNumberLocationActiveGetWithRequestBuilder(phoneNumber: phoneNumber).execute(apiResponseQueue) { result in
            switch result {
            case let .success(response):
                completion(response.body, nil)
            case let .failure(error):
                completion(nil, error)
            }
        }
    }

    /**
     Get Actvie Location for a Phone Number
     - GET /v1/e911/{phoneNumber}/location/active
     - Get the e911 location connected with the URI.
     - parameter phoneNumber: (path) Phone Number 
     - returns: RequestBuilder<ServiceDocsE911ActiveLocationURIApiOutput> 
     */
    open class func v1E911PhoneNumberLocationActiveGetWithRequestBuilder(phoneNumber: String) -> RequestBuilder<ServiceDocsE911ActiveLocationURIApiOutput> {
        var localVariablePath = "/v1/e911/{phoneNumber}/location/active"
        let phoneNumberPreEscape = "\(APIHelper.mapValueToPathItem(phoneNumber))"
        let phoneNumberPostEscape = phoneNumberPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        localVariablePath = localVariablePath.replacingOccurrences(of: "{phoneNumber}", with: phoneNumberPostEscape, options: .literal, range: nil)
        let localVariableURLString = OpenAPIClientAPI.basePath + localVariablePath
        let localVariableParameters: [String: Any]? = nil

        let localVariableUrlComponents = URLComponents(string: localVariableURLString)

        let localVariableNillableHeaders: [String: Any?] = [
            :
        ]

        let localVariableHeaderParameters = APIHelper.rejectNilHeaders(localVariableNillableHeaders)

        let localVariableRequestBuilder: RequestBuilder<ServiceDocsE911ActiveLocationURIApiOutput>.Type = OpenAPIClientAPI.requestBuilderFactory.getBuilder()

        return localVariableRequestBuilder.init(method: "GET", URLString: (localVariableUrlComponents?.string ?? localVariableURLString), parameters: localVariableParameters, headers: localVariableHeaderParameters, requiresAuthentication: false)
    }

    /**
     Get Location List for Phone Number
     
     - parameter phoneNumber: (path) Phone Number 
     - parameter apiResponseQueue: The queue on which api response is dispatched.
     - parameter completion: completion handler to receive the data and the error objects
     */
    @discardableResult
    open class func v1E911PhoneNumberLocationGet(phoneNumber: String, apiResponseQueue: DispatchQueue = OpenAPIClientAPI.apiResponseQueue, completion: @escaping ((_ data: ServiceDocsE911LocationsURIApiOutput?, _ error: Error?) -> Void)) -> RequestTask {
        return v1E911PhoneNumberLocationGetWithRequestBuilder(phoneNumber: phoneNumber).execute(apiResponseQueue) { result in
            switch result {
            case let .success(response):
                completion(response.body, nil)
            case let .failure(error):
                completion(nil, error)
            }
        }
    }

    /**
     Get Location List for Phone Number
     - GET /v1/e911/{phoneNumber}/location
     - Access a list of the e911 locations associated with the provided URI.
     - parameter phoneNumber: (path) Phone Number 
     - returns: RequestBuilder<ServiceDocsE911LocationsURIApiOutput> 
     */
    open class func v1E911PhoneNumberLocationGetWithRequestBuilder(phoneNumber: String) -> RequestBuilder<ServiceDocsE911LocationsURIApiOutput> {
        var localVariablePath = "/v1/e911/{phoneNumber}/location"
        let phoneNumberPreEscape = "\(APIHelper.mapValueToPathItem(phoneNumber))"
        let phoneNumberPostEscape = phoneNumberPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        localVariablePath = localVariablePath.replacingOccurrences(of: "{phoneNumber}", with: phoneNumberPostEscape, options: .literal, range: nil)
        let localVariableURLString = OpenAPIClientAPI.basePath + localVariablePath
        let localVariableParameters: [String: Any]? = nil

        let localVariableUrlComponents = URLComponents(string: localVariableURLString)

        let localVariableNillableHeaders: [String: Any?] = [
            :
        ]

        let localVariableHeaderParameters = APIHelper.rejectNilHeaders(localVariableNillableHeaders)

        let localVariableRequestBuilder: RequestBuilder<ServiceDocsE911LocationsURIApiOutput>.Type = OpenAPIClientAPI.requestBuilderFactory.getBuilder()

        return localVariableRequestBuilder.init(method: "GET", URLString: (localVariableUrlComponents?.string ?? localVariableURLString), parameters: localVariableParameters, headers: localVariableHeaderParameters, requiresAuthentication: false)
    }

    /**
     Create an E911 Location
     
     - parameter reqBody: (body) location details 
     - parameter apiResponseQueue: The queue on which api response is dispatched.
     - parameter completion: completion handler to receive the data and the error objects
     */
    @discardableResult
    open class func v1E911Post(reqBody: ServiceE911AddLocationInput, apiResponseQueue: DispatchQueue = OpenAPIClientAPI.apiResponseQueue, completion: @escaping ((_ data: ServiceDocsE911AddLocationOutput?, _ error: Error?) -> Void)) -> RequestTask {
        return v1E911PostWithRequestBuilder(reqBody: reqBody).execute(apiResponseQueue) { result in
            switch result {
            case let .success(response):
                completion(response.body, nil)
            case let .failure(error):
                completion(nil, error)
            }
        }
    }

    /**
     Create an E911 Location
     - POST /v1/e911
     - Enter new location details.
     - parameter reqBody: (body) location details 
     - returns: RequestBuilder<ServiceDocsE911AddLocationOutput> 
     */
    open class func v1E911PostWithRequestBuilder(reqBody: ServiceE911AddLocationInput) -> RequestBuilder<ServiceDocsE911AddLocationOutput> {
        let localVariablePath = "/v1/e911"
        let localVariableURLString = OpenAPIClientAPI.basePath + localVariablePath
        let localVariableParameters = JSONEncodingHelper.encodingParameters(forEncodableObject: reqBody)

        let localVariableUrlComponents = URLComponents(string: localVariableURLString)

        let localVariableNillableHeaders: [String: Any?] = [
            "Content-Type": "application/json",
        ]

        let localVariableHeaderParameters = APIHelper.rejectNilHeaders(localVariableNillableHeaders)

        let localVariableRequestBuilder: RequestBuilder<ServiceDocsE911AddLocationOutput>.Type = OpenAPIClientAPI.requestBuilderFactory.getBuilder()

        return localVariableRequestBuilder.init(method: "POST", URLString: (localVariableUrlComponents?.string ?? localVariableURLString), parameters: localVariableParameters, headers: localVariableHeaderParameters, requiresAuthentication: false)
    }
}

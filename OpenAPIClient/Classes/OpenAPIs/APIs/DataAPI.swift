//
// DataAPI.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

open class DataAPI {

    /**
     Get CDR Details
     
     - parameter accountID: (path) Account ID, 32 alpha numeric 
     - parameter cdrID: (path) CDR ID, string 
     - parameter apiResponseQueue: The queue on which api response is dispatched.
     - parameter completion: completion handler to receive the data and the error objects
     */
    @discardableResult
    open class func v1AccountAccountIDCdrCdrIDGet(accountID: String, cdrID: String, apiResponseQueue: DispatchQueue = OpenAPIClientAPI.apiResponseQueue, completion: @escaping ((_ data: ServiceDocsCdrGetSingle?, _ error: Error?) -> Void)) -> RequestTask {
        return v1AccountAccountIDCdrCdrIDGetWithRequestBuilder(accountID: accountID, cdrID: cdrID).execute(apiResponseQueue) { result in
            switch result {
            case let .success(response):
                completion(response.body, nil)
            case let .failure(error):
                completion(nil, error)
            }
        }
    }

    /**
     Get CDR Details
     - GET /v1/account/{accountID}/cdr/{cdrID}
     - Retrieve the details of a single CDR record from an account.
     - API Key:
       - type: apiKey Authorization (HEADER)
       - name: BearerAuth
     - parameter accountID: (path) Account ID, 32 alpha numeric 
     - parameter cdrID: (path) CDR ID, string 
     - returns: RequestBuilder<ServiceDocsCdrGetSingle> 
     */
    open class func v1AccountAccountIDCdrCdrIDGetWithRequestBuilder(accountID: String, cdrID: String) -> RequestBuilder<ServiceDocsCdrGetSingle> {
        var localVariablePath = "/v1/account/{accountID}/cdr/{cdrID}"
        let accountIDPreEscape = "\(APIHelper.mapValueToPathItem(accountID))"
        let accountIDPostEscape = accountIDPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        localVariablePath = localVariablePath.replacingOccurrences(of: "{accountID}", with: accountIDPostEscape, options: .literal, range: nil)
        let cdrIDPreEscape = "\(APIHelper.mapValueToPathItem(cdrID))"
        let cdrIDPostEscape = cdrIDPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        localVariablePath = localVariablePath.replacingOccurrences(of: "{cdrID}", with: cdrIDPostEscape, options: .literal, range: nil)
        let localVariableURLString = OpenAPIClientAPI.basePath + localVariablePath
        let localVariableParameters: [String: Any]? = nil

        let localVariableUrlComponents = URLComponents(string: localVariableURLString)

        let localVariableNillableHeaders: [String: Any?] = [
            :
        ]

        let localVariableHeaderParameters = APIHelper.rejectNilHeaders(localVariableNillableHeaders)

        let localVariableRequestBuilder: RequestBuilder<ServiceDocsCdrGetSingle>.Type = OpenAPIClientAPI.requestBuilderFactory.getBuilder()

        return localVariableRequestBuilder.init(method: "GET", URLString: (localVariableUrlComponents?.string ?? localVariableURLString), parameters: localVariableParameters, headers: localVariableHeaderParameters, requiresAuthentication: true)
    }

    /**
     Get CDR List
     
     - parameter accountID: (path) Account ID, 32 alpha numeric 
     - parameter pageSize: (query) Page size (Maximum number of results to display per page) (optional)
     - parameter startKey: (query) Start key (Starting offset for displaying results) (optional)
     - parameter createdFrom: (query) For displaying records which are created on or after this timestamp (Supported timestamp formats: iso 8601, unix time in seconds or milliseconds or microseconds or nanoseconds) (optional)
     - parameter createdTo: (query) For displaying records which are created on or before this timestamp (Supported timestamp formats: iso 8601, unix time in seconds or milliseconds or microseconds or nanoseconds) (optional)
     - parameter apiResponseQueue: The queue on which api response is dispatched.
     - parameter completion: completion handler to receive the data and the error objects
     */
    @discardableResult
    open class func v1AccountAccountIDCdrGet(accountID: String, pageSize: String? = nil, startKey: String? = nil, createdFrom: String? = nil, createdTo: String? = nil, apiResponseQueue: DispatchQueue = OpenAPIClientAPI.apiResponseQueue, completion: @escaping ((_ data: ServiceDocsCdrGetAll?, _ error: Error?) -> Void)) -> RequestTask {
        return v1AccountAccountIDCdrGetWithRequestBuilder(accountID: accountID, pageSize: pageSize, startKey: startKey, createdFrom: createdFrom, createdTo: createdTo).execute(apiResponseQueue) { result in
            switch result {
            case let .success(response):
                completion(response.body, nil)
            case let .failure(error):
                completion(nil, error)
            }
        }
    }

    /**
     Get CDR List
     - GET /v1/account/{accountID}/cdr
     - Retrieve a list of CDRs in a specific account.
     - API Key:
       - type: apiKey Authorization (HEADER)
       - name: BearerAuth
     - parameter accountID: (path) Account ID, 32 alpha numeric 
     - parameter pageSize: (query) Page size (Maximum number of results to display per page) (optional)
     - parameter startKey: (query) Start key (Starting offset for displaying results) (optional)
     - parameter createdFrom: (query) For displaying records which are created on or after this timestamp (Supported timestamp formats: iso 8601, unix time in seconds or milliseconds or microseconds or nanoseconds) (optional)
     - parameter createdTo: (query) For displaying records which are created on or before this timestamp (Supported timestamp formats: iso 8601, unix time in seconds or milliseconds or microseconds or nanoseconds) (optional)
     - returns: RequestBuilder<ServiceDocsCdrGetAll> 
     */
    open class func v1AccountAccountIDCdrGetWithRequestBuilder(accountID: String, pageSize: String? = nil, startKey: String? = nil, createdFrom: String? = nil, createdTo: String? = nil) -> RequestBuilder<ServiceDocsCdrGetAll> {
        var localVariablePath = "/v1/account/{accountID}/cdr"
        let accountIDPreEscape = "\(APIHelper.mapValueToPathItem(accountID))"
        let accountIDPostEscape = accountIDPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        localVariablePath = localVariablePath.replacingOccurrences(of: "{accountID}", with: accountIDPostEscape, options: .literal, range: nil)
        let localVariableURLString = OpenAPIClientAPI.basePath + localVariablePath
        let localVariableParameters: [String: Any]? = nil

        var localVariableUrlComponents = URLComponents(string: localVariableURLString)
        localVariableUrlComponents?.queryItems = APIHelper.mapValuesToQueryItems([
            "page_size": (wrappedValue: pageSize?.encodeToJSON(), isExplode: false),
            "start_key": (wrappedValue: startKey?.encodeToJSON(), isExplode: false),
            "created_from": (wrappedValue: createdFrom?.encodeToJSON(), isExplode: false),
            "created_to": (wrappedValue: createdTo?.encodeToJSON(), isExplode: false),
        ])

        let localVariableNillableHeaders: [String: Any?] = [
            :
        ]

        let localVariableHeaderParameters = APIHelper.rejectNilHeaders(localVariableNillableHeaders)

        let localVariableRequestBuilder: RequestBuilder<ServiceDocsCdrGetAll>.Type = OpenAPIClientAPI.requestBuilderFactory.getBuilder()

        return localVariableRequestBuilder.init(method: "GET", URLString: (localVariableUrlComponents?.string ?? localVariableURLString), parameters: localVariableParameters, headers: localVariableHeaderParameters, requiresAuthentication: true)
    }

    /**
     Get Call Daily Summary List
     
     - parameter accountId: (query)  (optional)
     - parameter callType: (query)  (optional)
     - parameter endDate: (query)  (optional)
     - parameter pageSize: (query)  (optional)
     - parameter startDate: (query)  (optional)
     - parameter startKey: (query)  (optional)
     - parameter apiResponseQueue: The queue on which api response is dispatched.
     - parameter completion: completion handler to receive the data and the error objects
     */
    @discardableResult
    open class func v1DataCallDailySummaryGet(accountId: String? = nil, callType: String? = nil, endDate: String? = nil, pageSize: Int? = nil, startDate: String? = nil, startKey: String? = nil, apiResponseQueue: DispatchQueue = OpenAPIClientAPI.apiResponseQueue, completion: @escaping ((_ data: ServiceDocsCallDailySummary?, _ error: Error?) -> Void)) -> RequestTask {
        return v1DataCallDailySummaryGetWithRequestBuilder(accountId: accountId, callType: callType, endDate: endDate, pageSize: pageSize, startDate: startDate, startKey: startKey).execute(apiResponseQueue) { result in
            switch result {
            case let .success(response):
                completion(response.body, nil)
            case let .failure(error):
                completion(nil, error)
            }
        }
    }

    /**
     Get Call Daily Summary List
     - GET /v1/data/call_daily_summary
     - Retrieve a daily summary of calls, including the account ID that made or received a call, the call type, the month and year, the duration, and other relevant information.
     - API Key:
       - type: apiKey Authorization (HEADER)
       - name: BearerAuth
     - parameter accountId: (query)  (optional)
     - parameter callType: (query)  (optional)
     - parameter endDate: (query)  (optional)
     - parameter pageSize: (query)  (optional)
     - parameter startDate: (query)  (optional)
     - parameter startKey: (query)  (optional)
     - returns: RequestBuilder<ServiceDocsCallDailySummary> 
     */
    open class func v1DataCallDailySummaryGetWithRequestBuilder(accountId: String? = nil, callType: String? = nil, endDate: String? = nil, pageSize: Int? = nil, startDate: String? = nil, startKey: String? = nil) -> RequestBuilder<ServiceDocsCallDailySummary> {
        let localVariablePath = "/v1/data/call_daily_summary"
        let localVariableURLString = OpenAPIClientAPI.basePath + localVariablePath
        let localVariableParameters: [String: Any]? = nil

        var localVariableUrlComponents = URLComponents(string: localVariableURLString)
        localVariableUrlComponents?.queryItems = APIHelper.mapValuesToQueryItems([
            "account_id": (wrappedValue: accountId?.encodeToJSON(), isExplode: false),
            "call_type": (wrappedValue: callType?.encodeToJSON(), isExplode: false),
            "end_date": (wrappedValue: endDate?.encodeToJSON(), isExplode: false),
            "page_size": (wrappedValue: pageSize?.encodeToJSON(), isExplode: false),
            "start_date": (wrappedValue: startDate?.encodeToJSON(), isExplode: false),
            "start_key": (wrappedValue: startKey?.encodeToJSON(), isExplode: false),
        ])

        let localVariableNillableHeaders: [String: Any?] = [
            :
        ]

        let localVariableHeaderParameters = APIHelper.rejectNilHeaders(localVariableNillableHeaders)

        let localVariableRequestBuilder: RequestBuilder<ServiceDocsCallDailySummary>.Type = OpenAPIClientAPI.requestBuilderFactory.getBuilder()

        return localVariableRequestBuilder.init(method: "GET", URLString: (localVariableUrlComponents?.string ?? localVariableURLString), parameters: localVariableParameters, headers: localVariableHeaderParameters, requiresAuthentication: true)
    }

    /**
     Get Call Detail List
     
     - parameter account: (query)  (optional)
     - parameter callType: (query)  (optional)
     - parameter calleeName: (query)  (optional)
     - parameter calleeNumber: (query)  (optional)
     - parameter callerName: (query)  (optional)
     - parameter callerNumber: (query)  (optional)
     - parameter endDate: (query)  (optional)
     - parameter pageSize: (query)  (optional)
     - parameter startDate: (query)  (optional)
     - parameter startKey: (query)  (optional)
     - parameter apiResponseQueue: The queue on which api response is dispatched.
     - parameter completion: completion handler to receive the data and the error objects
     */
    @discardableResult
    open class func v1DataCallDetailGet(account: String? = nil, callType: String? = nil, calleeName: String? = nil, calleeNumber: String? = nil, callerName: String? = nil, callerNumber: String? = nil, endDate: String? = nil, pageSize: Int? = nil, startDate: String? = nil, startKey: String? = nil, apiResponseQueue: DispatchQueue = OpenAPIClientAPI.apiResponseQueue, completion: @escaping ((_ data: ServiceDocsCallDetail?, _ error: Error?) -> Void)) -> RequestTask {
        return v1DataCallDetailGetWithRequestBuilder(account: account, callType: callType, calleeName: calleeName, calleeNumber: calleeNumber, callerName: callerName, callerNumber: callerNumber, endDate: endDate, pageSize: pageSize, startDate: startDate, startKey: startKey).execute(apiResponseQueue) { result in
            switch result {
            case let .success(response):
                completion(response.body, nil)
            case let .failure(error):
                completion(nil, error)
            }
        }
    }

    /**
     Get Call Detail List
     - GET /v1/data/call_detail
     - Retrieve specific details about a call (e.g., caller, recipient, date, time, duration, etc.).
     - API Key:
       - type: apiKey Authorization (HEADER)
       - name: BearerAuth
     - parameter account: (query)  (optional)
     - parameter callType: (query)  (optional)
     - parameter calleeName: (query)  (optional)
     - parameter calleeNumber: (query)  (optional)
     - parameter callerName: (query)  (optional)
     - parameter callerNumber: (query)  (optional)
     - parameter endDate: (query)  (optional)
     - parameter pageSize: (query)  (optional)
     - parameter startDate: (query)  (optional)
     - parameter startKey: (query)  (optional)
     - returns: RequestBuilder<ServiceDocsCallDetail> 
     */
    open class func v1DataCallDetailGetWithRequestBuilder(account: String? = nil, callType: String? = nil, calleeName: String? = nil, calleeNumber: String? = nil, callerName: String? = nil, callerNumber: String? = nil, endDate: String? = nil, pageSize: Int? = nil, startDate: String? = nil, startKey: String? = nil) -> RequestBuilder<ServiceDocsCallDetail> {
        let localVariablePath = "/v1/data/call_detail"
        let localVariableURLString = OpenAPIClientAPI.basePath + localVariablePath
        let localVariableParameters: [String: Any]? = nil

        var localVariableUrlComponents = URLComponents(string: localVariableURLString)
        localVariableUrlComponents?.queryItems = APIHelper.mapValuesToQueryItems([
            "account": (wrappedValue: account?.encodeToJSON(), isExplode: false),
            "call_type": (wrappedValue: callType?.encodeToJSON(), isExplode: false),
            "callee_name": (wrappedValue: calleeName?.encodeToJSON(), isExplode: false),
            "callee_number": (wrappedValue: calleeNumber?.encodeToJSON(), isExplode: false),
            "caller_name": (wrappedValue: callerName?.encodeToJSON(), isExplode: false),
            "caller_number": (wrappedValue: callerNumber?.encodeToJSON(), isExplode: false),
            "end_date": (wrappedValue: endDate?.encodeToJSON(), isExplode: false),
            "page_size": (wrappedValue: pageSize?.encodeToJSON(), isExplode: false),
            "start_date": (wrappedValue: startDate?.encodeToJSON(), isExplode: false),
            "start_key": (wrappedValue: startKey?.encodeToJSON(), isExplode: false),
        ])

        let localVariableNillableHeaders: [String: Any?] = [
            :
        ]

        let localVariableHeaderParameters = APIHelper.rejectNilHeaders(localVariableNillableHeaders)

        let localVariableRequestBuilder: RequestBuilder<ServiceDocsCallDetail>.Type = OpenAPIClientAPI.requestBuilderFactory.getBuilder()

        return localVariableRequestBuilder.init(method: "GET", URLString: (localVariableUrlComponents?.string ?? localVariableURLString), parameters: localVariableParameters, headers: localVariableHeaderParameters, requiresAuthentication: true)
    }

    /**
     Get Call Detail List
     
     - parameter account: (query)  (optional)
     - parameter callType: (query)  (optional)
     - parameter endMonth: (query)  (optional)
     - parameter endYear: (query)  (optional)
     - parameter pageSize: (query)  (optional)
     - parameter startKey: (query)  (optional)
     - parameter startMonth: (query)  (optional)
     - parameter startYear: (query)  (optional)
     - parameter apiResponseQueue: The queue on which api response is dispatched.
     - parameter completion: completion handler to receive the data and the error objects
     */
    @discardableResult
    open class func v1DataCallMonthlySummaryGet(account: String? = nil, callType: String? = nil, endMonth: Int? = nil, endYear: Int? = nil, pageSize: Int? = nil, startKey: String? = nil, startMonth: Int? = nil, startYear: Int? = nil, apiResponseQueue: DispatchQueue = OpenAPIClientAPI.apiResponseQueue, completion: @escaping ((_ data: ServiceDocsCallMonthlySummary?, _ error: Error?) -> Void)) -> RequestTask {
        return v1DataCallMonthlySummaryGetWithRequestBuilder(account: account, callType: callType, endMonth: endMonth, endYear: endYear, pageSize: pageSize, startKey: startKey, startMonth: startMonth, startYear: startYear).execute(apiResponseQueue) { result in
            switch result {
            case let .success(response):
                completion(response.body, nil)
            case let .failure(error):
                completion(nil, error)
            }
        }
    }

    /**
     Get Call Detail List
     - GET /v1/data/call_monthly_summary
     - Retrieve a monthly summary of calls, including which accounts made or received calls, the call type, and other relevant information.
     - API Key:
       - type: apiKey Authorization (HEADER)
       - name: BearerAuth
     - parameter account: (query)  (optional)
     - parameter callType: (query)  (optional)
     - parameter endMonth: (query)  (optional)
     - parameter endYear: (query)  (optional)
     - parameter pageSize: (query)  (optional)
     - parameter startKey: (query)  (optional)
     - parameter startMonth: (query)  (optional)
     - parameter startYear: (query)  (optional)
     - returns: RequestBuilder<ServiceDocsCallMonthlySummary> 
     */
    open class func v1DataCallMonthlySummaryGetWithRequestBuilder(account: String? = nil, callType: String? = nil, endMonth: Int? = nil, endYear: Int? = nil, pageSize: Int? = nil, startKey: String? = nil, startMonth: Int? = nil, startYear: Int? = nil) -> RequestBuilder<ServiceDocsCallMonthlySummary> {
        let localVariablePath = "/v1/data/call_monthly_summary"
        let localVariableURLString = OpenAPIClientAPI.basePath + localVariablePath
        let localVariableParameters: [String: Any]? = nil

        var localVariableUrlComponents = URLComponents(string: localVariableURLString)
        localVariableUrlComponents?.queryItems = APIHelper.mapValuesToQueryItems([
            "account": (wrappedValue: account?.encodeToJSON(), isExplode: false),
            "call_type": (wrappedValue: callType?.encodeToJSON(), isExplode: false),
            "end_month": (wrappedValue: endMonth?.encodeToJSON(), isExplode: false),
            "end_year": (wrappedValue: endYear?.encodeToJSON(), isExplode: false),
            "page_size": (wrappedValue: pageSize?.encodeToJSON(), isExplode: false),
            "start_key": (wrappedValue: startKey?.encodeToJSON(), isExplode: false),
            "start_month": (wrappedValue: startMonth?.encodeToJSON(), isExplode: false),
            "start_year": (wrappedValue: startYear?.encodeToJSON(), isExplode: false),
        ])

        let localVariableNillableHeaders: [String: Any?] = [
            :
        ]

        let localVariableHeaderParameters = APIHelper.rejectNilHeaders(localVariableNillableHeaders)

        let localVariableRequestBuilder: RequestBuilder<ServiceDocsCallMonthlySummary>.Type = OpenAPIClientAPI.requestBuilderFactory.getBuilder()

        return localVariableRequestBuilder.init(method: "GET", URLString: (localVariableUrlComponents?.string ?? localVariableURLString), parameters: localVariableParameters, headers: localVariableHeaderParameters, requiresAuthentication: true)
    }

    /**
     Get Endpoint List
     
     - parameter endpointName: (query)  (optional)
     - parameter featureName: (query)  (optional)
     - parameter pageSize: (query)  (optional)
     - parameter startKey: (query)  (optional)
     - parameter transactionType: (query)  (optional)
     - parameter version: (query)  (optional)
     - parameter apiResponseQueue: The queue on which api response is dispatched.
     - parameter completion: completion handler to receive the data and the error objects
     */
    @discardableResult
    open class func v1DataEndpointListGet(endpointName: String? = nil, featureName: String? = nil, pageSize: Int? = nil, startKey: String? = nil, transactionType: String? = nil, version: String? = nil, apiResponseQueue: DispatchQueue = OpenAPIClientAPI.apiResponseQueue, completion: @escaping ((_ data: ServiceDocsEndpointList?, _ error: Error?) -> Void)) -> RequestTask {
        return v1DataEndpointListGetWithRequestBuilder(endpointName: endpointName, featureName: featureName, pageSize: pageSize, startKey: startKey, transactionType: transactionType, version: version).execute(apiResponseQueue) { result in
            switch result {
            case let .success(response):
                completion(response.body, nil)
            case let .failure(error):
                completion(nil, error)
            }
        }
    }

    /**
     Get Endpoint List
     - GET /v1/data/endpoint_list
     - Access the endpoint list for each CPaaS API.
     - API Key:
       - type: apiKey Authorization (HEADER)
       - name: BearerAuth
     - parameter endpointName: (query)  (optional)
     - parameter featureName: (query)  (optional)
     - parameter pageSize: (query)  (optional)
     - parameter startKey: (query)  (optional)
     - parameter transactionType: (query)  (optional)
     - parameter version: (query)  (optional)
     - returns: RequestBuilder<ServiceDocsEndpointList> 
     */
    open class func v1DataEndpointListGetWithRequestBuilder(endpointName: String? = nil, featureName: String? = nil, pageSize: Int? = nil, startKey: String? = nil, transactionType: String? = nil, version: String? = nil) -> RequestBuilder<ServiceDocsEndpointList> {
        let localVariablePath = "/v1/data/endpoint_list"
        let localVariableURLString = OpenAPIClientAPI.basePath + localVariablePath
        let localVariableParameters: [String: Any]? = nil

        var localVariableUrlComponents = URLComponents(string: localVariableURLString)
        localVariableUrlComponents?.queryItems = APIHelper.mapValuesToQueryItems([
            "endpoint_name": (wrappedValue: endpointName?.encodeToJSON(), isExplode: false),
            "feature_name": (wrappedValue: featureName?.encodeToJSON(), isExplode: false),
            "page_size": (wrappedValue: pageSize?.encodeToJSON(), isExplode: false),
            "start_key": (wrappedValue: startKey?.encodeToJSON(), isExplode: false),
            "transaction_type": (wrappedValue: transactionType?.encodeToJSON(), isExplode: false),
            "version": (wrappedValue: version?.encodeToJSON(), isExplode: false),
        ])

        let localVariableNillableHeaders: [String: Any?] = [
            :
        ]

        let localVariableHeaderParameters = APIHelper.rejectNilHeaders(localVariableNillableHeaders)

        let localVariableRequestBuilder: RequestBuilder<ServiceDocsEndpointList>.Type = OpenAPIClientAPI.requestBuilderFactory.getBuilder()

        return localVariableRequestBuilder.init(method: "GET", URLString: (localVariableUrlComponents?.string ?? localVariableURLString), parameters: localVariableParameters, headers: localVariableHeaderParameters, requiresAuthentication: true)
    }

    /**
     Get Event Daily Summary List
     
     - parameter accountId: (query)  (optional)
     - parameter component: (query)  (optional)
     - parameter endDate: (query)  (optional)
     - parameter pageSize: (query)  (optional)
     - parameter startDate: (query)  (optional)
     - parameter startKey: (query)  (optional)
     - parameter apiResponseQueue: The queue on which api response is dispatched.
     - parameter completion: completion handler to receive the data and the error objects
     */
    @discardableResult
    open class func v1DataEventDailySummaryGet(accountId: String? = nil, component: String? = nil, endDate: String? = nil, pageSize: Int? = nil, startDate: String? = nil, startKey: String? = nil, apiResponseQueue: DispatchQueue = OpenAPIClientAPI.apiResponseQueue, completion: @escaping ((_ data: ServiceDocsEventDailySummary?, _ error: Error?) -> Void)) -> RequestTask {
        return v1DataEventDailySummaryGetWithRequestBuilder(accountId: accountId, component: component, endDate: endDate, pageSize: pageSize, startDate: startDate, startKey: startKey).execute(apiResponseQueue) { result in
            switch result {
            case let .success(response):
                completion(response.body, nil)
            case let .failure(error):
                completion(nil, error)
            }
        }
    }

    /**
     Get Event Daily Summary List
     - GET /v1/data/event_daily_summary
     - Obtain a daily summary of events in a CPaaS account (e.g., setting/resetting the presence status for a user or extension).
     - API Key:
       - type: apiKey Authorization (HEADER)
       - name: BearerAuth
     - parameter accountId: (query)  (optional)
     - parameter component: (query)  (optional)
     - parameter endDate: (query)  (optional)
     - parameter pageSize: (query)  (optional)
     - parameter startDate: (query)  (optional)
     - parameter startKey: (query)  (optional)
     - returns: RequestBuilder<ServiceDocsEventDailySummary> 
     */
    open class func v1DataEventDailySummaryGetWithRequestBuilder(accountId: String? = nil, component: String? = nil, endDate: String? = nil, pageSize: Int? = nil, startDate: String? = nil, startKey: String? = nil) -> RequestBuilder<ServiceDocsEventDailySummary> {
        let localVariablePath = "/v1/data/event_daily_summary"
        let localVariableURLString = OpenAPIClientAPI.basePath + localVariablePath
        let localVariableParameters: [String: Any]? = nil

        var localVariableUrlComponents = URLComponents(string: localVariableURLString)
        localVariableUrlComponents?.queryItems = APIHelper.mapValuesToQueryItems([
            "account_id": (wrappedValue: accountId?.encodeToJSON(), isExplode: false),
            "component": (wrappedValue: component?.encodeToJSON(), isExplode: false),
            "end_date": (wrappedValue: endDate?.encodeToJSON(), isExplode: false),
            "page_size": (wrappedValue: pageSize?.encodeToJSON(), isExplode: false),
            "start_date": (wrappedValue: startDate?.encodeToJSON(), isExplode: false),
            "start_key": (wrappedValue: startKey?.encodeToJSON(), isExplode: false),
        ])

        let localVariableNillableHeaders: [String: Any?] = [
            :
        ]

        let localVariableHeaderParameters = APIHelper.rejectNilHeaders(localVariableNillableHeaders)

        let localVariableRequestBuilder: RequestBuilder<ServiceDocsEventDailySummary>.Type = OpenAPIClientAPI.requestBuilderFactory.getBuilder()

        return localVariableRequestBuilder.init(method: "GET", URLString: (localVariableUrlComponents?.string ?? localVariableURLString), parameters: localVariableParameters, headers: localVariableHeaderParameters, requiresAuthentication: true)
    }

    /**
     Get Event Details
     
     - parameter accountId: (query)  (optional)
     - parameter component: (query)  (optional)
     - parameter endDateTime: (query)  (optional)
     - parameter eventName: (query)  (optional)
     - parameter execStatus: (query)  (optional)
     - parameter pageSize: (query)  (optional)
     - parameter startDateTime: (query)  (optional)
     - parameter startKey: (query)  (optional)
     - parameter username: (query)  (optional)
     - parameter apiResponseQueue: The queue on which api response is dispatched.
     - parameter completion: completion handler to receive the data and the error objects
     */
    @discardableResult
    open class func v1DataEventDetailGet(accountId: String? = nil, component: String? = nil, endDateTime: String? = nil, eventName: String? = nil, execStatus: String? = nil, pageSize: Int? = nil, startDateTime: String? = nil, startKey: String? = nil, username: String? = nil, apiResponseQueue: DispatchQueue = OpenAPIClientAPI.apiResponseQueue, completion: @escaping ((_ data: ServiceDocsEventDetail?, _ error: Error?) -> Void)) -> RequestTask {
        return v1DataEventDetailGetWithRequestBuilder(accountId: accountId, component: component, endDateTime: endDateTime, eventName: eventName, execStatus: execStatus, pageSize: pageSize, startDateTime: startDateTime, startKey: startKey, username: username).execute(apiResponseQueue) { result in
            switch result {
            case let .success(response):
                completion(response.body, nil)
            case let .failure(error):
                completion(nil, error)
            }
        }
    }

    /**
     Get Event Details
     - GET /v1/data/event_detail
     - Obtain specific details about an event (e.g., an E911 notification, a deleted account, or a created user).
     - API Key:
       - type: apiKey Authorization (HEADER)
       - name: BearerAuth
     - parameter accountId: (query)  (optional)
     - parameter component: (query)  (optional)
     - parameter endDateTime: (query)  (optional)
     - parameter eventName: (query)  (optional)
     - parameter execStatus: (query)  (optional)
     - parameter pageSize: (query)  (optional)
     - parameter startDateTime: (query)  (optional)
     - parameter startKey: (query)  (optional)
     - parameter username: (query)  (optional)
     - returns: RequestBuilder<ServiceDocsEventDetail> 
     */
    open class func v1DataEventDetailGetWithRequestBuilder(accountId: String? = nil, component: String? = nil, endDateTime: String? = nil, eventName: String? = nil, execStatus: String? = nil, pageSize: Int? = nil, startDateTime: String? = nil, startKey: String? = nil, username: String? = nil) -> RequestBuilder<ServiceDocsEventDetail> {
        let localVariablePath = "/v1/data/event_detail"
        let localVariableURLString = OpenAPIClientAPI.basePath + localVariablePath
        let localVariableParameters: [String: Any]? = nil

        var localVariableUrlComponents = URLComponents(string: localVariableURLString)
        localVariableUrlComponents?.queryItems = APIHelper.mapValuesToQueryItems([
            "account_id": (wrappedValue: accountId?.encodeToJSON(), isExplode: false),
            "component": (wrappedValue: component?.encodeToJSON(), isExplode: false),
            "end_date_time": (wrappedValue: endDateTime?.encodeToJSON(), isExplode: false),
            "event_name": (wrappedValue: eventName?.encodeToJSON(), isExplode: false),
            "exec_status": (wrappedValue: execStatus?.encodeToJSON(), isExplode: false),
            "page_size": (wrappedValue: pageSize?.encodeToJSON(), isExplode: false),
            "start_date_time": (wrappedValue: startDateTime?.encodeToJSON(), isExplode: false),
            "start_key": (wrappedValue: startKey?.encodeToJSON(), isExplode: false),
            "username": (wrappedValue: username?.encodeToJSON(), isExplode: false),
        ])

        let localVariableNillableHeaders: [String: Any?] = [
            :
        ]

        let localVariableHeaderParameters = APIHelper.rejectNilHeaders(localVariableNillableHeaders)

        let localVariableRequestBuilder: RequestBuilder<ServiceDocsEventDetail>.Type = OpenAPIClientAPI.requestBuilderFactory.getBuilder()

        return localVariableRequestBuilder.init(method: "GET", URLString: (localVariableUrlComponents?.string ?? localVariableURLString), parameters: localVariableParameters, headers: localVariableHeaderParameters, requiresAuthentication: true)
    }

    /**
     Get Event Monthly Summary List
     
     - parameter accountId: (query)  (optional)
     - parameter component: (query)  (optional)
     - parameter endMonth: (query)  (optional)
     - parameter endYear: (query)  (optional)
     - parameter pageSize: (query)  (optional)
     - parameter startKey: (query)  (optional)
     - parameter startMonth: (query)  (optional)
     - parameter startYear: (query)  (optional)
     - parameter apiResponseQueue: The queue on which api response is dispatched.
     - parameter completion: completion handler to receive the data and the error objects
     */
    @discardableResult
    open class func v1DataEventMonthlySummaryGet(accountId: String? = nil, component: String? = nil, endMonth: Int? = nil, endYear: Int? = nil, pageSize: Int? = nil, startKey: String? = nil, startMonth: Int? = nil, startYear: Int? = nil, apiResponseQueue: DispatchQueue = OpenAPIClientAPI.apiResponseQueue, completion: @escaping ((_ data: ServiceDocsEventMonthlySummary?, _ error: Error?) -> Void)) -> RequestTask {
        return v1DataEventMonthlySummaryGetWithRequestBuilder(accountId: accountId, component: component, endMonth: endMonth, endYear: endYear, pageSize: pageSize, startKey: startKey, startMonth: startMonth, startYear: startYear).execute(apiResponseQueue) { result in
            switch result {
            case let .success(response):
                completion(response.body, nil)
            case let .failure(error):
                completion(nil, error)
            }
        }
    }

    /**
     Get Event Monthly Summary List
     - GET /v1/data/event_monthly_summary
     - Obtain a monthly summary of events in a CPaaS account (e.g., adding media files or assigning phone numbers).
     - API Key:
       - type: apiKey Authorization (HEADER)
       - name: BearerAuth
     - parameter accountId: (query)  (optional)
     - parameter component: (query)  (optional)
     - parameter endMonth: (query)  (optional)
     - parameter endYear: (query)  (optional)
     - parameter pageSize: (query)  (optional)
     - parameter startKey: (query)  (optional)
     - parameter startMonth: (query)  (optional)
     - parameter startYear: (query)  (optional)
     - returns: RequestBuilder<ServiceDocsEventMonthlySummary> 
     */
    open class func v1DataEventMonthlySummaryGetWithRequestBuilder(accountId: String? = nil, component: String? = nil, endMonth: Int? = nil, endYear: Int? = nil, pageSize: Int? = nil, startKey: String? = nil, startMonth: Int? = nil, startYear: Int? = nil) -> RequestBuilder<ServiceDocsEventMonthlySummary> {
        let localVariablePath = "/v1/data/event_monthly_summary"
        let localVariableURLString = OpenAPIClientAPI.basePath + localVariablePath
        let localVariableParameters: [String: Any]? = nil

        var localVariableUrlComponents = URLComponents(string: localVariableURLString)
        localVariableUrlComponents?.queryItems = APIHelper.mapValuesToQueryItems([
            "account_id": (wrappedValue: accountId?.encodeToJSON(), isExplode: false),
            "component": (wrappedValue: component?.encodeToJSON(), isExplode: false),
            "end_month": (wrappedValue: endMonth?.encodeToJSON(), isExplode: false),
            "end_year": (wrappedValue: endYear?.encodeToJSON(), isExplode: false),
            "page_size": (wrappedValue: pageSize?.encodeToJSON(), isExplode: false),
            "start_key": (wrappedValue: startKey?.encodeToJSON(), isExplode: false),
            "start_month": (wrappedValue: startMonth?.encodeToJSON(), isExplode: false),
            "start_year": (wrappedValue: startYear?.encodeToJSON(), isExplode: false),
        ])

        let localVariableNillableHeaders: [String: Any?] = [
            :
        ]

        let localVariableHeaderParameters = APIHelper.rejectNilHeaders(localVariableNillableHeaders)

        let localVariableRequestBuilder: RequestBuilder<ServiceDocsEventMonthlySummary>.Type = OpenAPIClientAPI.requestBuilderFactory.getBuilder()

        return localVariableRequestBuilder.init(method: "GET", URLString: (localVariableUrlComponents?.string ?? localVariableURLString), parameters: localVariableParameters, headers: localVariableHeaderParameters, requiresAuthentication: true)
    }

    /**
     Get Feature Daily Summary List
     
     - parameter endDate: (query)  (optional)
     - parameter featureName: (query)  (optional)
     - parameter pageSize: (query)  (optional)
     - parameter startDate: (query)  (optional)
     - parameter startKey: (query)  (optional)
     - parameter apiResponseQueue: The queue on which api response is dispatched.
     - parameter completion: completion handler to receive the data and the error objects
     */
    @discardableResult
    open class func v1DataFeatureDailySummaryGet(endDate: String? = nil, featureName: String? = nil, pageSize: Int? = nil, startDate: String? = nil, startKey: String? = nil, apiResponseQueue: DispatchQueue = OpenAPIClientAPI.apiResponseQueue, completion: @escaping ((_ data: ServiceDocsFeatureDailySummary?, _ error: Error?) -> Void)) -> RequestTask {
        return v1DataFeatureDailySummaryGetWithRequestBuilder(endDate: endDate, featureName: featureName, pageSize: pageSize, startDate: startDate, startKey: startKey).execute(apiResponseQueue) { result in
            switch result {
            case let .success(response):
                completion(response.body, nil)
            case let .failure(error):
                completion(nil, error)
            }
        }
    }

    /**
     Get Feature Daily Summary List
     - GET /v1/data/feature_daily_summary
     - Retrieve a daily summary about a feature, including usage, which accounts execute the steps, and other relevant information.
     - API Key:
       - type: apiKey Authorization (HEADER)
       - name: BearerAuth
     - parameter endDate: (query)  (optional)
     - parameter featureName: (query)  (optional)
     - parameter pageSize: (query)  (optional)
     - parameter startDate: (query)  (optional)
     - parameter startKey: (query)  (optional)
     - returns: RequestBuilder<ServiceDocsFeatureDailySummary> 
     */
    open class func v1DataFeatureDailySummaryGetWithRequestBuilder(endDate: String? = nil, featureName: String? = nil, pageSize: Int? = nil, startDate: String? = nil, startKey: String? = nil) -> RequestBuilder<ServiceDocsFeatureDailySummary> {
        let localVariablePath = "/v1/data/feature_daily_summary"
        let localVariableURLString = OpenAPIClientAPI.basePath + localVariablePath
        let localVariableParameters: [String: Any]? = nil

        var localVariableUrlComponents = URLComponents(string: localVariableURLString)
        localVariableUrlComponents?.queryItems = APIHelper.mapValuesToQueryItems([
            "end_date": (wrappedValue: endDate?.encodeToJSON(), isExplode: false),
            "feature_name": (wrappedValue: featureName?.encodeToJSON(), isExplode: false),
            "page_size": (wrappedValue: pageSize?.encodeToJSON(), isExplode: false),
            "start_date": (wrappedValue: startDate?.encodeToJSON(), isExplode: false),
            "start_key": (wrappedValue: startKey?.encodeToJSON(), isExplode: false),
        ])

        let localVariableNillableHeaders: [String: Any?] = [
            :
        ]

        let localVariableHeaderParameters = APIHelper.rejectNilHeaders(localVariableNillableHeaders)

        let localVariableRequestBuilder: RequestBuilder<ServiceDocsFeatureDailySummary>.Type = OpenAPIClientAPI.requestBuilderFactory.getBuilder()

        return localVariableRequestBuilder.init(method: "GET", URLString: (localVariableUrlComponents?.string ?? localVariableURLString), parameters: localVariableParameters, headers: localVariableHeaderParameters, requiresAuthentication: true)
    }

    /**
     Get Feature Monthly Summary List
     
     - parameter endMonth: (query)  (optional)
     - parameter endYear: (query)  (optional)
     - parameter featureName: (query)  (optional)
     - parameter pageSize: (query)  (optional)
     - parameter startKey: (query)  (optional)
     - parameter startMonth: (query)  (optional)
     - parameter startYear: (query)  (optional)
     - parameter apiResponseQueue: The queue on which api response is dispatched.
     - parameter completion: completion handler to receive the data and the error objects
     */
    @discardableResult
    open class func v1DataFeatureMonthlySummaryGet(endMonth: Int? = nil, endYear: Int? = nil, featureName: String? = nil, pageSize: Int? = nil, startKey: String? = nil, startMonth: Int? = nil, startYear: Int? = nil, apiResponseQueue: DispatchQueue = OpenAPIClientAPI.apiResponseQueue, completion: @escaping ((_ data: ServiceDocsFeatureMonthlySummary?, _ error: Error?) -> Void)) -> RequestTask {
        return v1DataFeatureMonthlySummaryGetWithRequestBuilder(endMonth: endMonth, endYear: endYear, featureName: featureName, pageSize: pageSize, startKey: startKey, startMonth: startMonth, startYear: startYear).execute(apiResponseQueue) { result in
            switch result {
            case let .success(response):
                completion(response.body, nil)
            case let .failure(error):
                completion(nil, error)
            }
        }
    }

    /**
     Get Feature Monthly Summary List
     - GET /v1/data/feature_monthly_summary
     - Retrieve a monthly summary about a feature’s usage, new users, updates, and other relevant information.
     - API Key:
       - type: apiKey Authorization (HEADER)
       - name: BearerAuth
     - parameter endMonth: (query)  (optional)
     - parameter endYear: (query)  (optional)
     - parameter featureName: (query)  (optional)
     - parameter pageSize: (query)  (optional)
     - parameter startKey: (query)  (optional)
     - parameter startMonth: (query)  (optional)
     - parameter startYear: (query)  (optional)
     - returns: RequestBuilder<ServiceDocsFeatureMonthlySummary> 
     */
    open class func v1DataFeatureMonthlySummaryGetWithRequestBuilder(endMonth: Int? = nil, endYear: Int? = nil, featureName: String? = nil, pageSize: Int? = nil, startKey: String? = nil, startMonth: Int? = nil, startYear: Int? = nil) -> RequestBuilder<ServiceDocsFeatureMonthlySummary> {
        let localVariablePath = "/v1/data/feature_monthly_summary"
        let localVariableURLString = OpenAPIClientAPI.basePath + localVariablePath
        let localVariableParameters: [String: Any]? = nil

        var localVariableUrlComponents = URLComponents(string: localVariableURLString)
        localVariableUrlComponents?.queryItems = APIHelper.mapValuesToQueryItems([
            "end_month": (wrappedValue: endMonth?.encodeToJSON(), isExplode: false),
            "end_year": (wrappedValue: endYear?.encodeToJSON(), isExplode: false),
            "feature_name": (wrappedValue: featureName?.encodeToJSON(), isExplode: false),
            "page_size": (wrappedValue: pageSize?.encodeToJSON(), isExplode: false),
            "start_key": (wrappedValue: startKey?.encodeToJSON(), isExplode: false),
            "start_month": (wrappedValue: startMonth?.encodeToJSON(), isExplode: false),
            "start_year": (wrappedValue: startYear?.encodeToJSON(), isExplode: false),
        ])

        let localVariableNillableHeaders: [String: Any?] = [
            :
        ]

        let localVariableHeaderParameters = APIHelper.rejectNilHeaders(localVariableNillableHeaders)

        let localVariableRequestBuilder: RequestBuilder<ServiceDocsFeatureMonthlySummary>.Type = OpenAPIClientAPI.requestBuilderFactory.getBuilder()

        return localVariableRequestBuilder.init(method: "GET", URLString: (localVariableUrlComponents?.string ?? localVariableURLString), parameters: localVariableParameters, headers: localVariableHeaderParameters, requiresAuthentication: true)
    }
}

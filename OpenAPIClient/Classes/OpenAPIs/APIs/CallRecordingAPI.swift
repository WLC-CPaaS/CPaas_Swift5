//
// CallRecordingAPI.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

open class CallRecordingAPI {

    /**
     Get Account Call Recording
     
     - parameter accountID: (path) Account ID, 32 alpha numeric 
     - parameter apiResponseQueue: The queue on which api response is dispatched.
     - parameter completion: completion handler to receive the data and the error objects
     */
    @discardableResult
    open class func v1AccountAccountIDRecordingGet(accountID: String, apiResponseQueue: DispatchQueue = OpenAPIClientAPI.apiResponseQueue, completion: @escaping ((_ data: ServiceDocsCallRecordingGetAll?, _ error: Error?) -> Void)) -> RequestTask {
        return v1AccountAccountIDRecordingGetWithRequestBuilder(accountID: accountID).execute(apiResponseQueue) { result in
            switch result {
            case let .success(response):
                completion(response.body, nil)
            case let .failure(error):
                completion(nil, error)
            }
        }
    }

    /**
     Get Account Call Recording
     - GET /v1/account/{accountID}/recording
     - Obtain a list of the call recordings within an account.
     - API Key:
       - type: apiKey Authorization (HEADER)
       - name: BearerAuth
     - parameter accountID: (path) Account ID, 32 alpha numeric 
     - returns: RequestBuilder<ServiceDocsCallRecordingGetAll> 
     */
    open class func v1AccountAccountIDRecordingGetWithRequestBuilder(accountID: String) -> RequestBuilder<ServiceDocsCallRecordingGetAll> {
        var localVariablePath = "/v1/account/{accountID}/recording"
        let accountIDPreEscape = "\(APIHelper.mapValueToPathItem(accountID))"
        let accountIDPostEscape = accountIDPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        localVariablePath = localVariablePath.replacingOccurrences(of: "{accountID}", with: accountIDPostEscape, options: .literal, range: nil)
        let localVariableURLString = OpenAPIClientAPI.basePath + localVariablePath
        let localVariableParameters: [String: Any]? = nil

        let localVariableUrlComponents = URLComponents(string: localVariableURLString)

        let localVariableNillableHeaders: [String: Any?] = [
            :
        ]

        let localVariableHeaderParameters = APIHelper.rejectNilHeaders(localVariableNillableHeaders)

        let localVariableRequestBuilder: RequestBuilder<ServiceDocsCallRecordingGetAll>.Type = OpenAPIClientAPI.requestBuilderFactory.getBuilder()

        return localVariableRequestBuilder.init(method: "GET", URLString: (localVariableUrlComponents?.string ?? localVariableURLString), parameters: localVariableParameters, headers: localVariableHeaderParameters, requiresAuthentication: true)
    }

    /**
     Delete Call Recording
     
     - parameter accountID: (path) Account ID, 32 alpha numeric 
     - parameter recordingID: (path) Recording ID, 39 (yyyymm-&lt;32 id&gt;) 
     - parameter apiResponseQueue: The queue on which api response is dispatched.
     - parameter completion: completion handler to receive the data and the error objects
     */
    @discardableResult
    open class func v1AccountAccountIDRecordingRecordingIDDelete(accountID: String, recordingID: String, apiResponseQueue: DispatchQueue = OpenAPIClientAPI.apiResponseQueue, completion: @escaping ((_ data: ServiceDocsCallRecordingGetSingle?, _ error: Error?) -> Void)) -> RequestTask {
        return v1AccountAccountIDRecordingRecordingIDDeleteWithRequestBuilder(accountID: accountID, recordingID: recordingID).execute(apiResponseQueue) { result in
            switch result {
            case let .success(response):
                completion(response.body, nil)
            case let .failure(error):
                completion(nil, error)
            }
        }
    }

    /**
     Delete Call Recording
     - DELETE /v1/account/{accountID}/recording/{recordingID}
     - Delete a single call recording from an account.
     - API Key:
       - type: apiKey Authorization (HEADER)
       - name: BearerAuth
     - parameter accountID: (path) Account ID, 32 alpha numeric 
     - parameter recordingID: (path) Recording ID, 39 (yyyymm-&lt;32 id&gt;) 
     - returns: RequestBuilder<ServiceDocsCallRecordingGetSingle> 
     */
    open class func v1AccountAccountIDRecordingRecordingIDDeleteWithRequestBuilder(accountID: String, recordingID: String) -> RequestBuilder<ServiceDocsCallRecordingGetSingle> {
        var localVariablePath = "/v1/account/{accountID}/recording/{recordingID}"
        let accountIDPreEscape = "\(APIHelper.mapValueToPathItem(accountID))"
        let accountIDPostEscape = accountIDPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        localVariablePath = localVariablePath.replacingOccurrences(of: "{accountID}", with: accountIDPostEscape, options: .literal, range: nil)
        let recordingIDPreEscape = "\(APIHelper.mapValueToPathItem(recordingID))"
        let recordingIDPostEscape = recordingIDPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        localVariablePath = localVariablePath.replacingOccurrences(of: "{recordingID}", with: recordingIDPostEscape, options: .literal, range: nil)
        let localVariableURLString = OpenAPIClientAPI.basePath + localVariablePath
        let localVariableParameters: [String: Any]? = nil

        let localVariableUrlComponents = URLComponents(string: localVariableURLString)

        let localVariableNillableHeaders: [String: Any?] = [
            :
        ]

        let localVariableHeaderParameters = APIHelper.rejectNilHeaders(localVariableNillableHeaders)

        let localVariableRequestBuilder: RequestBuilder<ServiceDocsCallRecordingGetSingle>.Type = OpenAPIClientAPI.requestBuilderFactory.getBuilder()

        return localVariableRequestBuilder.init(method: "DELETE", URLString: (localVariableUrlComponents?.string ?? localVariableURLString), parameters: localVariableParameters, headers: localVariableHeaderParameters, requiresAuthentication: true)
    }

    /**
     Get Call Recording Details
     
     - parameter accountID: (path) Account ID, 32 alpha numeric 
     - parameter recordingID: (path) Recording ID, 39 (yyyymm-&lt;32 id&gt;) 
     - parameter apiResponseQueue: The queue on which api response is dispatched.
     - parameter completion: completion handler to receive the data and the error objects
     */
    @discardableResult
    open class func v1AccountAccountIDRecordingRecordingIDGet(accountID: String, recordingID: String, apiResponseQueue: DispatchQueue = OpenAPIClientAPI.apiResponseQueue, completion: @escaping ((_ data: ServiceDocsCallRecordingGetSingle?, _ error: Error?) -> Void)) -> RequestTask {
        return v1AccountAccountIDRecordingRecordingIDGetWithRequestBuilder(accountID: accountID, recordingID: recordingID).execute(apiResponseQueue) { result in
            switch result {
            case let .success(response):
                completion(response.body, nil)
            case let .failure(error):
                completion(nil, error)
            }
        }
    }

    /**
     Get Call Recording Details
     - GET /v1/account/{accountID}/recording/{recordingID}
     - Access details for each recorded call in an account (e.g., duration, names and numbers of call participants, etc.).
     - API Key:
       - type: apiKey Authorization (HEADER)
       - name: BearerAuth
     - parameter accountID: (path) Account ID, 32 alpha numeric 
     - parameter recordingID: (path) Recording ID, 39 (yyyymm-&lt;32 id&gt;) 
     - returns: RequestBuilder<ServiceDocsCallRecordingGetSingle> 
     */
    open class func v1AccountAccountIDRecordingRecordingIDGetWithRequestBuilder(accountID: String, recordingID: String) -> RequestBuilder<ServiceDocsCallRecordingGetSingle> {
        var localVariablePath = "/v1/account/{accountID}/recording/{recordingID}"
        let accountIDPreEscape = "\(APIHelper.mapValueToPathItem(accountID))"
        let accountIDPostEscape = accountIDPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        localVariablePath = localVariablePath.replacingOccurrences(of: "{accountID}", with: accountIDPostEscape, options: .literal, range: nil)
        let recordingIDPreEscape = "\(APIHelper.mapValueToPathItem(recordingID))"
        let recordingIDPostEscape = recordingIDPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        localVariablePath = localVariablePath.replacingOccurrences(of: "{recordingID}", with: recordingIDPostEscape, options: .literal, range: nil)
        let localVariableURLString = OpenAPIClientAPI.basePath + localVariablePath
        let localVariableParameters: [String: Any]? = nil

        let localVariableUrlComponents = URLComponents(string: localVariableURLString)

        let localVariableNillableHeaders: [String: Any?] = [
            :
        ]

        let localVariableHeaderParameters = APIHelper.rejectNilHeaders(localVariableNillableHeaders)

        let localVariableRequestBuilder: RequestBuilder<ServiceDocsCallRecordingGetSingle>.Type = OpenAPIClientAPI.requestBuilderFactory.getBuilder()

        return localVariableRequestBuilder.init(method: "GET", URLString: (localVariableUrlComponents?.string ?? localVariableURLString), parameters: localVariableParameters, headers: localVariableHeaderParameters, requiresAuthentication: true)
    }

    /**
     Get User Call Recording
     
     - parameter accountID: (path) Account ID, 32 alpha numeric 
     - parameter userID: (path) User ID, 32 alpha numeric 
     - parameter apiResponseQueue: The queue on which api response is dispatched.
     - parameter completion: completion handler to receive the data and the error objects
     */
    @discardableResult
    open class func v1AccountAccountIDUserUserIDRecordingGet(accountID: String, userID: String, apiResponseQueue: DispatchQueue = OpenAPIClientAPI.apiResponseQueue, completion: @escaping ((_ data: ServiceDocsCallRecordingGetAll?, _ error: Error?) -> Void)) -> RequestTask {
        return v1AccountAccountIDUserUserIDRecordingGetWithRequestBuilder(accountID: accountID, userID: userID).execute(apiResponseQueue) { result in
            switch result {
            case let .success(response):
                completion(response.body, nil)
            case let .failure(error):
                completion(nil, error)
            }
        }
    }

    /**
     Get User Call Recording
     - GET /v1/account/{accountID}/user/{userID}/recording
     - Retrieve a list of call recordings for a user within an account.
     - API Key:
       - type: apiKey Authorization (HEADER)
       - name: BearerAuth
     - parameter accountID: (path) Account ID, 32 alpha numeric 
     - parameter userID: (path) User ID, 32 alpha numeric 
     - returns: RequestBuilder<ServiceDocsCallRecordingGetAll> 
     */
    open class func v1AccountAccountIDUserUserIDRecordingGetWithRequestBuilder(accountID: String, userID: String) -> RequestBuilder<ServiceDocsCallRecordingGetAll> {
        var localVariablePath = "/v1/account/{accountID}/user/{userID}/recording"
        let accountIDPreEscape = "\(APIHelper.mapValueToPathItem(accountID))"
        let accountIDPostEscape = accountIDPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        localVariablePath = localVariablePath.replacingOccurrences(of: "{accountID}", with: accountIDPostEscape, options: .literal, range: nil)
        let userIDPreEscape = "\(APIHelper.mapValueToPathItem(userID))"
        let userIDPostEscape = userIDPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        localVariablePath = localVariablePath.replacingOccurrences(of: "{userID}", with: userIDPostEscape, options: .literal, range: nil)
        let localVariableURLString = OpenAPIClientAPI.basePath + localVariablePath
        let localVariableParameters: [String: Any]? = nil

        let localVariableUrlComponents = URLComponents(string: localVariableURLString)

        let localVariableNillableHeaders: [String: Any?] = [
            :
        ]

        let localVariableHeaderParameters = APIHelper.rejectNilHeaders(localVariableNillableHeaders)

        let localVariableRequestBuilder: RequestBuilder<ServiceDocsCallRecordingGetAll>.Type = OpenAPIClientAPI.requestBuilderFactory.getBuilder()

        return localVariableRequestBuilder.init(method: "GET", URLString: (localVariableUrlComponents?.string ?? localVariableURLString), parameters: localVariableParameters, headers: localVariableHeaderParameters, requiresAuthentication: true)
    }
}
